<div class="user-wrapper clearfix">
<a href="#allusers" class="headermenu">
    <div class="headermenu">
        <img src="images/mail_user.png" alt=""  style="float:right; margin-top: 15px;margin-right: 20px"/>
    </div>
</a>
<div class="user-profile-wrapper clearfix">
    <div class="user-profile-header clearfix">
        <div class="user-profile-header-name" >Юрий</div>
        <div class="user-profile-header-tags-container clearfix">
            <img src="images/button.png" alt=""/>
        </div>
    </div>
    <div class="user-profile-tags-wrapper clearfix">
        <div class="user-profile-info-interests-container">
            <ul>
                <li>Живопись</li>
                <li>Архитектура</li>
                <li>Программирование</li>
                <li>Нейронные сети</li>
                <li>UML</li>
            </ul>
        </div>
    </div>
    <div class="user-profile-about-wrapper">
        <textarea style="background: transparent; margin-left: -10px" name="" id="" placeholder="О себе"  disabled>Занимаюсь маркетингом в ИТ, неравнодушен к 2.0-технологиям и путешествиям. Разрабатываю вменяемые программные решения насущных проблем.
        </textarea>
    </div>
    <div class="user-profile-eat-wrapper clearfix">
        <div class="user-profile-eat-container" style="width: 60%">
            <div class="user-profile-eat-title">Обычно я ем в:</div>
            <div class="user-profile-eat-times">
                <div class="user-profile-eat-one morning">
                    <span style="display: inline-block; margin-top: 10px;color: #999">8:00 - 10:00</span>
                </div>
                <div class="user-profile-eat-one afternoon">
                    <span style="display: inline-block;margin-top: 10px;color: #999">12:00 - 13:00</span>
                </div>
                <div class="user-profile-eat-one evening">
                    <input type="time" name="time" disabled>
                </div>
            </div>
        </div>
        <div class="user-profile-budget" style="margin-left: 20px;width: 37%">
            <div class="user-profile-eat-title">Бюджет:</div>
            <div class="user-profile-eat-budget-wrapper">
                <input type="text" class="user-profile-eat-budget-input" value="50"/>
                <span>-</span>
                <input type="text" class="user-profile-eat-budget-input" value="100"/>
            </div>
        </div>

    </div>

</div>
<div class="user-message-wrapper">
    <div class="user-map-wrapper">
        <div class="map" id="Map" style="height: 400px;width:50%"></div>
    </div>
    <div class="ovh" style="overflow-y: auto">
        <div id="address_list">
        </div>
        <div class="user-list">

        </div>
    </div>
</div>


<script>


</script>
<script>

var loc = [];
loc.push(["50.439737, 30.379519999999957 "]);
loc.push(["50.431784, 30.404976000000033"]);
loc.push(["50.4320398, 30.471058500000026"]);
loc.push([ "50.12546, 30.4361269999892"]);
loc.push(["50.482146, 30.596777999999972"]);
loc.push(["50.464886, 30.45667900000001"]);






$(document).ready(function() {
    function MapWrapper() {
        var _this = this;
        this.map = null;
        this.setMarker = null;
        this.geocoder = null;
        this.markerClusterer = null;
        this.address = "";
        this.centerX = 50.45; //начальные координаты - город Москва
        this.centerY = 30.5233;
        this.markers = [];
        var retAddress = "";
        this.refresh = function() {

        }
        this.init = function() {
            //инициализируем Geocoder
            if (_this.geocoder == null) {
                _this.geocoder = new google.maps.Geocoder();
            }
            //инициализируем карту
            if (_this.map == null) {
                var latlng = new google.maps.LatLng(_this.centerX, _this.centerY);
                var myOptions = {
                    zoom: 10,
                    center: latlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                _this.map = new google.maps.Map(document.getElementById("Map"),
                        myOptions);
            }
            google.maps.event.addListener(_this.map, 'click', function(event) {
                address = event.latLng.lat() + ' ' + event.latLng.lng();
                //$("#address").val(event.latLng);
                _this.setMapToCity();
            });
            //по кнопке Ok
            $("#submit").unbind("click");
            $("#submit").click(function() {
                _this.setMapToCity();
            });
            //или по enter в поле адреса устанавливаем карту на город + маркер которым всё отмечаем
            $("#address").unbind("keypress");
            //$("#address").keypress(function (e) {
            //    var code = (e.keyCode ? e.keyCode : e.which);
            //    if (code == 13) {
            //        _this.setMapToCity();
            //    }
            //});

            $(".input_city").show();
            $(".address_list").hide();
            $(".info-put-marker").hide();
            $(".save-button").hide();
            //по кнопке Сохранить - сохраняем в БД но пока этого не видно
            $(".save-button").unbind("click");
            $(".save-button").click(function() {
                //_this.SaveToDB();
            });


        }

        this.simpleinit = function() {
            //инициализируем Geocoder
            if (_this.geocoder == null) {
                _this.geocoder = new google.maps.Geocoder();
            }
            //инициализируем карту
            if (_this.map == null) {
                var latlng = new google.maps.LatLng(_this.centerX, _this.centerY);
                var myOptions = {
                    zoom: 10,
                    center: latlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                _this.map = new google.maps.Map(document.getElementById("Map"),
                        myOptions);
            }
        }
        //Установить карту на город
        this.setMapToCity = function() {
            this.address = $("#address").val();
            _this.geocoder.geocode({ 'address': address }, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    //_this.map.setCenter(results[0].geometry.location);
                    //установить Zoom таким образом, чтобы город был показан весь
                    //_this.map.setZoom(11);
                    //и поставить маркет для отметки адреса
                    _this.addMarker(results[0].geometry.location);
                    console.log(results[0].geometry.location.toString());
                    // $(".info-put-marker").show();
                } else {
                    //  alert("Пошло что-то не так, потому что: " + status);
                }
            });
        }

        //вычисление значения Zoom по границам
        this.getZoom = function(bounds) {

            var width = $(".map").width();
            var height = $(".map").height();

            var dlat = Math.abs(bounds.getNorthEast().lat() - bounds.getSouthWest().lat());
            var dlon = Math.abs(bounds.getNorthEast().lng() - bounds.getSouthWest().lng());

            var max = 0;
            if (dlat > dlon) {
                max = dlat;
            } else {
                max = dlon;
            }

            // Center latitude in radians
            var clat = Math.PI * Math.abs(bounds.getSouthWest().lat() + bounds.getNorthEast().lat()) / 360.;

            var C = 0.0000107288;
            var z0 = Math.ceil(Math.log(dlat / (C * height)) / Math.LN2);
            var z1 = Math.ceil(Math.log(dlon / (C * width * Math.cos(clat))) / Math.LN2);

            return 18 - ((z1 > z0) ? z1 : z0);
        }

        //добавить маркер
        this.addMarker = function(loc) {
            //if (_this.setMarker != null) {
            //    _this.setMarker.setMap(_this.map);
            //    _this.setMarker.setPosition(_this.map.getCenter());
            //} else {
            var marker = new google.maps.Marker({
                map: _this.map,
                draggable: true,
                animation: google.maps.Animation.DROP,
                position: loc
            });
            google.maps.event.addListener(marker, "dblclick", function() {
                marker.setMap(null);
                var index = _this.markers.indexOf(marker);
                $("#address_list .item:eq(" + index + ")").remove();
                _this.markers.splice(index, 1);
                //_this.clearlist();
            });
            _this.markers.push(marker);

            _this.markerPositionChanged();
            // google.maps.event.addListener(_this.setMarker, 'click', _this.toggleBounceMarker);
            //при окончании перемещения маркера установить функцию
            google.maps.event.addListener(marker, 'dragend', function() {
                var index = _this.markers.indexOf(marker);
                _this.geocoder.geocode({ 'latLng': marker.getPosition(), 'language': 'ru' }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var text = _this.ComposeAddress(results[0]);
                        $("#address_list .item:eq(" + index + ") .address").html(text);

                    }
                })


            });

            //}
        }


        //при клике на маркет он будет подыматься и показывать куда упадет когда его отпустим
        this.toggleBounceMarker = function() {
            if (_this.setMarker.getAnimation() != null) {
                _this.setMarker.setAnimation(null);
            } else {
                _this.setMarker.setAnimation(google.maps.Animation.BOUNCE);
            }
        }


        //получить координаты и информацию о местоположении
        this.markerPositionChanged = function() {
            if (_this.markers.length === 1) {
                $("#address_list").empty();
            }
            var latlng = _this.markers[_this.markers.length - 1].getPosition();
            _this.GetInfo(latlng);

        }

        //получение данных по
        this.GetInfo = function(latlng) {
            _this.geocoder.geocode({ 'latLng': latlng, 'language': 'ru' }, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // _this.map.setCenter(results[0].geometry.location);
                    return _this.SetAddresses(results);

                    //
                } else {
                    //  alert("Пошло что-то не так, потому что: " + status);
                }
            });
        }

        //Заполнить значение адреса
        this.SetAddresses = function(results) {
            //$(".address_list").show();
            var addressText = _this.ComposeAddress(results[0]);

            var address = $("<div>").attr("class", "address").text(addressText);
            var obj = $("<div>").attr("class", "item").append(address);
            $("#address_list").append(obj);
            //$(".info-upload-picture").show();
            //$(".upload-picture").show();
            //$(".picture").empty();
        }

        //Составить строку адреса по первому результату
        this.ComposeAddress = function(item) {
            retAddress = "";
            $.each(item.address_components, function(i, address_item) {
                var isOk = false;
                $.each(address_item.types, function(j, typeName) {
                    //не будем брать значения адреса улицы и локали (города) - город потом будет в administrative_level_2
                    if (typeName != "street_address" && typeName != "locality") {
                        isOk = true;
                    }
                });
                if (isOk) {
                    if (retAddress == "") {
                        retAddress = address_item.long_name;
                    } else {
                        retAddress = retAddress + ", " + address_item.long_name;
                    }
                }
            });
            return retAddress;
        }
    }

    var mapWrapper = new MapWrapper();
    mapWrapper.init();
    function showAllMarkers() {
        for (var j = 0; j < loc.length; j++) {
            for (var i = 0; i < loc[j].length; i++) {
                mapWrapper.addMarker(new google.maps.LatLng(loc[j][i].split(',')[0], loc[j][i].split(',')[1]));
            }
        }
    }

    showAllMarkers();
    function clearMap() {
        for (var i = 0; i < mapWrapper.markers.length; i++) {
            mapWrapper.markers[i].setMap(null);
        }
        mapWrapper.markers = [];
    }

    function showSomeIndex(index) {
//                debugger;
        clearMap();
        for (var i = 0; i < loc[index].length; i++) {
            mapWrapper.addMarker(new google.maps.LatLng(loc[index][i].split(',')[0], loc[index][i].split(',')[1]));
        }
    }

    $(".item").click(
            function() {

                showSomeIndex($(this).attr("data-index"));
                $('#address_list').html('');
            });
});

</script>

</div>